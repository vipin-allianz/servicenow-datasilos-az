<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilosaz.RestrictedSiloSetup</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RestrictedSiloSetup</name>
        <script><![CDATA[function RestrictedSiloSetup()
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var IsValidSysId = x_snc_devtools.IsValidSysId;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	function Log(strText)
	{
		x_snc_devtools.Log('RestrictedSiloSetup: '+strText);
	}
	
	var strSiloName = 'HR';
	
	// Create the HR silo
	var grSilo = new GlideRecord('x_snc_datasilos_datasilos');
	grSilo.addQuery('name','=',strSiloName);
	grSilo.query();
	if (grSilo.getRowCount() > 1)
	{
		Log('ERROR: There is more than one silo named "'+strSiloName+'"');
		return;
	}
	
	var strSiloSysId = '';
	if (grSilo.next())
	{
		strSiloSysId = GetStringValue(grSilo.sys_id);
	}
	
	if (strSiloSysId == '')
	{
		var grNewSilo = new GlideRecord('x_snc_datasilos_datasilos');
		grNewSilo.initialize();
		grNewSilo.name = strSiloName;
		grNewSilo.x_snc_datasilosaz_restricted = true;
		strSiloSysId = GetStringValue(grNewSilo.insert());
		if (strSiloSysId == '')
		{
			Log('ERROR: Failed to create the "'+strSiloName+'".');
			return;
		}
		Log('Created silo "'+strSiloName+'".');
	}
	else
	{
		Log('Silo "'+strSiloName+'" existed already.');
	}
	
	
	// Add the restricted groups as members
	var grRestrictedGroups = new GlideRecord('sys_user_group');
	var strRestrictedType = gs.getProperty('az.incident.group.restricted_type');
	if (IsValidSysId(strRestrictedType) == false)
	{
		Log('ERROR: The system property "az.incident.group.restricted_type" does not contain a valid sys id.');
		return;
	}
	grRestrictedGroups.addEncodedQuery('typeLIKE'+strRestrictedType); // restricted groups
	grRestrictedGroups.query();
	Log('Found '+grRestrictedGroups.getRowCount()+' restricted groups.');
	
	var nRestrictedGroupsAdded = 0;
	while (grRestrictedGroups.next())
	{
		var grGroupsToSilos = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
		grGroupsToSilos.addQuery('datasilo','=',strSiloSysId);
		grGroupsToSilos.addQuery('group','=',grRestrictedGroups.sys_id);
		grGroupsToSilos.addQuery('type','=','member');
		grGroupsToSilos.query();
		if (grGroupsToSilos.next())
		{
			//Log('Group "'+grRestrictedGroups.name+'" is already a member of silo "'+strSiloName+'"');
		}
		else
		{
			grGroupsToSilos.initialize();
			grGroupsToSilos.datasilo = strSiloSysId;
			grGroupsToSilos.group = grRestrictedGroups.sys_id;
			grGroupsToSilos.type = 'member';
			var strGroupToSiloSysId = grGroupsToSilos.insert();
			if (strGroupToSiloSysId == '')
			{
				Log('Failed to add group "'+grRestrictedGroups.name+'" to silo "'+strSiloName+'"');
			}
			else
			{
				nRestrictedGroupsAdded++;
			}
		}
	}
	Log('Added '+nRestrictedGroupsAdded+' groups to silo "'+strSiloName+'".');	
	
	// Add the restricted coordination groups as supervisors
	var nRestrictedSupportGroupsAdded = 0;
	var strRestrictedSupportGroups = gs.getProperty('az.incident.group.restricted_support');
	var aRestrictedSupportGroups = GetArrayValue(strRestrictedSupportGroups);
	for (var nRSG = 0; nRSG < aRestrictedSupportGroups.length; nRSG++)
	{
		var strGroupSysId = aRestrictedSupportGroups[nRSG];
		if (IsValidSysId(strGroupSysId) == false)
		{
			Log('WARNING: "'+strGroupSysId+'" is not a valid sys id.');
		}
		else
		{
			var grGroupsToSilos = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
			grGroupsToSilos.addQuery('datasilo','=',strSiloSysId);
			grGroupsToSilos.addQuery('group','=',strGroupSysId);
			grGroupsToSilos.addQuery('type','=','supervisor');
			grGroupsToSilos.query();
			var strGroupName = '';
			if (grGroupsToSilos.next())
			{
				//Log('Group "'+grRestrictedGroups.name+'" is already a member of silo "'+strSiloName+'"');
			}
			else
			{
				grGroupsToSilos.initialize();
				grGroupsToSilos.datasilo = strSiloSysId;
				grGroupsToSilos.group = strGroupSysId;
				grGroupsToSilos.type = 'supervisor';
				var strGroupToSiloSysId = grGroupsToSilos.insert();
				if (strGroupToSiloSysId == '')
				{
					Log('Failed to add group "'+strGroupSysId+'" to silo "'+strSiloName+'"');
				}
				else
				{
					nRestrictedSupportGroupsAdded++;
				}
			}
		}
	}
	Log('Added '+nRestrictedSupportGroupsAdded+' support groups to silo "'+strSiloName+'".');	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-04-27 14:10:40</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0c51b4191b372810f28a0d81ec4bcb62</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>RestrictedSiloSetup</sys_name>
        <sys_package display_value="DataSilosAZ" source="x_snc_datasilosaz">044532c1db429410ba15a35305961966</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DataSilosAZ">044532c1db429410ba15a35305961966</sys_scope>
        <sys_update_name>sys_script_include_0c51b4191b372810f28a0d81ec4bcb62</sys_update_name>
        <sys_updated_by>admin_R3EXUVB</sys_updated_by>
        <sys_updated_on>2021-07-08 13:47:02</sys_updated_on>
    </sys_script_include>
</record_update>
